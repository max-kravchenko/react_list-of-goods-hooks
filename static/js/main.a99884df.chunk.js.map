{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","handleSort","isReversed","handleReverse","visibleGoods","goods","sort","productA","productB","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","classNames","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAME,EAAgB,WAC3B,MAA+BC,mBAASH,EAASI,MAAjD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAOMC,EAnCD,SACLC,EADK,GAGJ,IADCH,EACF,EADEA,WAAYF,EACd,EADcA,SAERI,EAAY,YAAOC,GAmBzB,OAjBAD,EAAaE,MAAK,SAACC,EAAUC,GAC3B,OAAQR,GACN,KAAKL,EAASc,SACZ,OAAOF,EAASG,cAAcF,GAEhC,KAAKb,EAASgB,OACZ,OAAOJ,EAASK,OAASJ,EAASI,OAEpC,QACE,OAAO,MAITV,GACFE,EAAaS,UAGRT,EAaHU,CAAkBlB,EAAiB,CAAEM,aAAYF,aAErD,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMhB,EAAWN,EAASc,WACnCM,UAAWG,IACT,SACA,UACA,CAAE,WAAYlB,IAAaL,EAASc,WANxC,iCAYA,wBACEO,KAAK,SACLC,QAAS,kBAAMhB,EAAWN,EAASgB,SACnCI,UAAWG,IACT,SACA,aACA,CAAE,WAAYlB,IAAaL,EAASgB,SANxC,4BAYA,wBACEK,KAAK,SACLC,QAAS,kBAAMd,GAAeD,IAC9Ba,UAAWG,IACT,SACA,aACA,CAAE,YAAahB,IANnB,sBAYEF,IAAaL,EAASI,MAAQG,IAE5B,wBACEc,KAAK,SACLC,QAnDQ,WAClBhB,EAAWN,EAASI,MACpBI,GAAc,IAkDJY,UAAU,4BAHZ,sBAWN,6BACGX,EAAae,KAAI,SAACC,GAAD,OAChB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YCvHjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a99884df.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { isReversed, sortType }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((productA, productB) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return productA.localeCompare(productB);\n\n      case SortType.LENGTH:\n        return productA.length - productB.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, handleSort] = useState(SortType.NONE);\n  const [isReversed, handleReverse] = useState(false);\n\n  const handleReset = () => {\n    handleSort(SortType.NONE);\n    handleReverse(false);\n  };\n\n  const visibleGoods\n    = getReorderedGoods(goodsFromServer, { isReversed, sortType });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => handleSort(SortType.ALPHABET)}\n          className={classNames(\n            'button',\n            'is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => handleSort(SortType.LENGTH)}\n          className={classNames(\n            'button',\n            'is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => handleReverse(!isReversed)}\n          className={classNames(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversed },\n          )}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed)\n          && (\n            <button\n              type=\"button\"\n              onClick={handleReset}\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )}\n\n      </div>\n\n      <ul>\n        {visibleGoods.map((good) => (\n          <li\n            key={good}\n            data-cy=\"Good\"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}